version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: genai-postgres-dotnet
    environment:
      POSTGRES_DB: genai_chatbot
      POSTGRES_USER: genai_user
      POSTGRES_PASSWORD: genai_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/init-db:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U genai_user -d genai_chatbot"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - genai-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: genai-redis-dotnet
    command: redis-server --appendonly yes --appendfsync everysec
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - genai-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Backend API (.NET)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: runtime
    image: genai-boilerplate-dotnet-backend:latest
    container_name: genai-backend-dotnet
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=genai_chatbot;Username=genai_user;Password=genai_password;Port=5432
      - RedisSettings__ConnectionString=redis:6379
      - JwtSettings__SecretKey=your-super-secret-key-here-change-in-production-at-least-32-characters-long
      - JwtSettings__Issuer=GenAIBoilerplateAPI
      - JwtSettings__Audience=GenAIBoilerplateClient
      - JwtSettings__ExpirationInMinutes=60
      - JwtSettings__RefreshTokenExpirationInDays=7
      - AIProviders__OpenAI__ApiKey=${OPENAI_API_KEY:-}
      - AIProviders__Anthropic__ApiKey=${ANTHROPIC_API_KEY:-}
      - LOGGING__LOGLEVEL__DEFAULT=Information
    volumes:
      - ./data/documents:/app/data/documents
      - ./data/embeddings:/app/data/embeddings
      - ./data/uploads:/app/data/uploads
    ports:
      - "8000:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    networks:
      - genai-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    image: genai-boilerplate-dotnet-frontend:latest
    container_name: genai-frontend-dotnet
    ports:
      - "3000:8080"
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
      - VITE_WS_URL=ws://localhost:8000
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - genai-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Optional: pgAdmin for database management (use profile: tools)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: genai-pgadmin-dotnet
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@genai.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - genai-network
    profiles:
      - tools

  # Optional: Redis Commander for Redis management (use profile: tools)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: genai-redis-commander-dotnet
    environment:
      REDIS_HOSTS: local:redis:6379
      HTTP_USER: admin
      HTTP_PASSWORD: admin123
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - genai-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  genai-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
